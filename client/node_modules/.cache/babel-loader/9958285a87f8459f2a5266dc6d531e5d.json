{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rachelwadsworth-smith/Desktop/dpl_winter_2020/week9/todolist24/src/App.js\";\nimport React from \"react\";\nimport { Form, Header, Container, List, Input, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      todos: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        todos\n      } = this.state;\n      axios.post(\"/api/todos\", {\n        name\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          todos: [data, ...todos],\n          name: \"\"\n        });\n      });\n    };\n\n    this.updateTodo = id => {\n      axios.put(`/api/todos/${id}`).then(({\n        data\n      }) => {\n        const todos = this.state.todos.map(todo => {\n          if (todo.id === id) return data;\n          return todo;\n        });\n        this.setState({\n          todos\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/todos\").then(({\n      data: todos\n    }) => this.setState({\n      todos\n    }));\n  }\n\n  render() {\n    const {\n      name,\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h3\",\n          textAlign: \"center\",\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            required: true,\n            value: name,\n            onChange: e => this.setState({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: todo.complete ? styles.complete : {},\n            onClick: () => this.updateTodo(todo.id),\n            children: todo.name\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = {\n  complete: {\n    textDecoration: \"line-through\",\n    color: \"grey\"\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/rachelwadsworth-smith/Desktop/dpl_winter_2020/week9/todolist24/src/App.js"],"names":["React","Form","Header","Container","List","Input","Segment","axios","App","Component","state","name","todos","handleSubmit","e","preventDefault","post","then","data","setState","updateTodo","id","put","map","todo","componentDidMount","get","render","target","value","complete","styles","textDecoration","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,OANF,QAOO,mBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KADwB;;AAAA,SAOhCC,YAPgC,GAOhBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKF,KAA7B;AACAH,MAAAA,KAAK,CAACS,IAAN,CAAW,YAAX,EAAyB;AAAEL,QAAAA;AAAF,OAAzB,EAAmCM,IAAnC,CAAwC,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACpD,aAAKC,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAE,CAACM,IAAD,EAAO,GAAGN,KAAV,CAAT;AAA2BD,UAAAA,IAAI,EAAE;AAAjC,SAAd;AACD,OAFD;AAGD,KAb+B;;AAAA,SAehCS,UAfgC,GAelBC,EAAD,IAAQ;AACnBd,MAAAA,KAAK,CAACe,GAAN,CAAW,cAAaD,EAAG,EAA3B,EAA8BJ,IAA9B,CAAmC,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAC/C,cAAMN,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAX,CAAiBW,GAAjB,CAAsBC,IAAD,IAAU;AAC3C,cAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB,OAAOH,IAAP;AACpB,iBAAOM,IAAP;AACD,SAHa,CAAd;AAKA,aAAKL,QAAL,CAAc;AAAEP,UAAAA;AAAF,SAAd;AACD,OAPD;AAQD,KAxB+B;AAAA;;AAGhCa,EAAAA,iBAAiB,GAAG;AAClBlB,IAAAA,KAAK,CAACmB,GAAN,CAAU,YAAV,EAAwBT,IAAxB,CAA6B,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,KAAqB,KAAKO,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd,CAAlD;AACD;;AAqBDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,KAAKF,KAA7B;AACA,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,KAAK,EAAEF,IAFT;AAGE,YAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKK,QAAL,CAAc;AAAER,cAAAA,IAAI,EAAEG,CAAC,CAACc,MAAF,CAASC;AAAjB,aAAd;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,IAAD;AAAA,oBACGjB,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD,CAAM,IAAN;AAEE,YAAA,KAAK,EAAEA,IAAI,CAACM,QAAL,GAAgBC,MAAM,CAACD,QAAvB,GAAkC,EAF3C;AAGE,YAAA,OAAO,EAAE,MAAM,KAAKV,UAAL,CAAgBI,IAAI,CAACH,EAArB,CAHjB;AAAA,sBAKGG,IAAI,CAACb;AALR,aACOa,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAvD+B;;AA0DlC,MAAMU,MAAM,GAAG;AACbD,EAAAA,QAAQ,EAAE;AACRE,IAAAA,cAAc,EAAE,cADR;AAERC,IAAAA,KAAK,EAAE;AAFC;AADG,CAAf;AAOA,eAAezB,GAAf","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  Header,\n  Container,\n  List,\n  Input,\n  Segment,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = { name: \"\", todos: [] };\n\n  componentDidMount() {\n    axios.get(\"/api/todos\").then(({ data: todos }) => this.setState({ todos }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, todos } = this.state;\n    axios.post(\"/api/todos\", { name }).then(({ data }) => {\n      this.setState({ todos: [data, ...todos], name: \"\" });\n    });\n  };\n\n  updateTodo = (id) => {\n    axios.put(`/api/todos/${id}`).then(({ data }) => {\n      const todos = this.state.todos.map((todo) => {\n        if (todo.id === id) return data;\n        return todo;\n      });\n\n      this.setState({ todos });\n    });\n  };\n\n  render() {\n    const { name, todos } = this.state;\n    return (\n      <Container>\n        <Segment textAlign=\"center\">\n          <Header as=\"h3\" textAlign=\"center\">\n            Todo List\n          </Header>\n          <Form onSubmit={this.handleSubmit}>\n            <Input\n              required\n              value={name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n          </Form>\n          <List>\n            {todos.map((todo) => (\n              <List.Item\n                key={todo.id}\n                style={todo.complete ? styles.complete : {}}\n                onClick={() => this.updateTodo(todo.id)}\n              >\n                {todo.name}\n              </List.Item>\n            ))}\n          </List>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nconst styles = {\n  complete: {\n    textDecoration: \"line-through\",\n    color: \"grey\",\n  },\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}